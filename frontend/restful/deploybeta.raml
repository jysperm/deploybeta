#%RAML 1.0
title: Deploybeta API
version: v1
baseUri: https://dashboard.deploybeta.io
mediaType: application/json

securitySchemes:
  sessionToken:
    type: Basic Authentication
    describedBy:
      headers:
        Authorization: string
      responses:
        401:

securedBy: [ sessionToken ]

types:
  username:
    type: string
    pattern: ^[A-Za-z0-9_-]+$

  email: string

  applicationName: string
  versionTag: string
  domain: string

  dataSourceName: string
  dataSourceHost: string

  dataSourceType:
    enum: [ redis, mongodb ]

  dataSourceRole:
    enum: [ master, slave ]

  dataSourceCommands:
    enum: [ 'change-role', 'report-status' ]

  account:
    properties:
      username: username
      email: email

  session:
    properties:
      username: username
      token: string

  application:
    properties:
      name: applicationName
      owner: username
      gitRepository: string
      instances: number
      version: version

  applicationNode:
    properties:
      state: string
      versionTag: versionTag
      createdAt: datetime

  applicationExtra:
    type: application
    properties:
      domains: domain[]
      versions: version[]
      nodes: applicationNode[]

  version:
    properties:
      registry: string
      tag: versionTag

  versionProgress:
    properties:
      log: string
      time: datetime
      stream:
        enum: [ stdout, stderr ]

  dataSource:
    properties:
      name: dataSourceName
      type: dataSourceType
      owner: username
      instances: number

  dataSourceExtra:
    type: dataSource
    properties:
      linkedApps: applicationName[]

  dataSourceNode:
    properties:
      host: dataSourceHost
      role: dataSourceRole

resourceTypes:
  Account:
    get:
      responses:
        200:
          body:
            type: account

  Accounts:
    post:
      securedBy:
      body:
        properties:
          username: username
          password: string
          email: email
      responses:
        201:
          body:
            type: account
        400:
        409:

  Sessions:
    post:
      securedBy:
      body:
        properties:
          username: username
          password: string
      responses:
        201:
          body:
            type: session
        401:

  Application:
    patch:
      body:
        properties:
          gitRepository?: string
          instances?: number
          version?: string
      responses:
        200:
          body:
            type: application
        409:

    delete:
      responses:
        200:

  Applications:
    get:
      responses:
        200:
          body:
            type: applicationExtra[]

    post:
      body:
        properties:
          name: string
          gitRepository?: string
          instances: number
          version?: string
      responses:
        201:
          body:
            type: application
        409:

  Version:
    put:
      body:
        properties:
          tag: versionTag
      responses:
        200:
          body:
            type: version

  VersionProgress:
    get:
      responses:
        200:
          body:
            text/event-stream:
              type: versionProgress

  Versions:
    post:
      body:
        properties:
          gitTag: string
      responses:
        201:
          body:
            type: version

  DataSource:
    patch:
      body:
        properties:
          instances?: number
      responses:
        200:
          body:
            type: application
        409:

    delete:
      responses:
        200:

  DataSources:
    get:
      responses:
        200:
          body:
            type: dataSourceExtra[]

    post:
      body:
        properties:
          name: dataSourceName
          type: dataSourceType
      responses:
        201:
          body:
            type: dataSource
        409:

  DataSourceNodes:
    get:
      responses:
        200:
          body: dataSourceNode[]

/accounts:
  type: Accounts

/sessions:
  type: Sessions

  /account:
    type: Account

/apps:
  type: Applications

  /{name}:
    uriParameters:
      name: applicationName

    type: Application

    /version:
      type: Version

    /versions:
      type: Versions

    /versions/{tag}/progress:
      uriParameters:
        tag: version

      type: VersionProgress

    /domains/{domain}:
      uriParameters:
        appName: domain

      post:
      delete:

/data-sources:
  type: DataSources

  /{name}:
    uriParameters:
      name: dataSourceName

    type: DataSource

    /links/{appName}:
      uriParameters:
        appName: applicationName

      post:
      delete:

    /nodes:
      type: DataSourceNodes

    /nodes/{nodeHost}/role:
      uriParameters:
        nodeHost: dataSourceHost

      put:
        body:
          properties:
            role: dataSourceRole

/data-sources/{name}/agents:
  uriParameters:
    name: dataSourceName

  post:
    body:
      properties:
        host: dataSourceHost
    responses:
      200:
        body:
          properties:
            role: dataSourceRole
            masterHost: dataSourceHost

  /{nodeHost}:
    uriParameters:
      nodeHost: dataSourceHost

    put:
      body:
        properties:
          role: dataSourceRole
          masterHost: dataSourceHost

    /commands:
      get:
        responses:
          200:
            body:
              properties:
                command: dataSourceCommands
                role?: dataSourceRole
                masterHost: dataSourceHost
